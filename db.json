{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/hexo-editor.png","path":"images/hexo-editor.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"source/images/debug.gif","path":"images/debug.gif","modified":1,"renderable":0}],"Cache":[{"_id":"themes/next/README.en.md","hash":"3b0c7998cf17f9cf9e1a5bfcd65679a43a00c817","modified":1506012240719},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1506012240719},{"_id":"themes/next/_config.yml","hash":"1878885ea1cc6b365a2578fb23d7279cea0113cd","modified":1506015691032},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1506012240719},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1506012240719},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1506012240723},{"_id":"source/_about/index.md","hash":"309f1a70283035782c5338ec55ce2c5fe1b74e42","modified":1506012240667},{"_id":"source/_drafts/hexo-writing.md","hash":"b0cd6e60fd1d426c117a7cf9182d3eb85be03bb0","modified":1506018196451},{"_id":"source/_drafts/react-dnd-0.md","hash":"60410b74f3ac96fa9a37928c387734b26a9466ed","modified":1506012240667},{"_id":"source/_posts/hexo-install.md","hash":"3bf3903f00efe317e416e0e268e48807aeb7ef6d","modified":1506015608467},{"_id":"source/categories/index.md","hash":"1b5c43289d35653603d7399da2a6391fe53f11b8","modified":1506012240667},{"_id":"source/tags/index.md","hash":"f760e2c2d3f1c052017490299719363442a320bd","modified":1506012240691},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1506012240719},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1506012240719},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1506012240719},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1506012240719},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1506012240719},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1506012240719},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1506012240719},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1506012240719},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1506012240719},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1506012240719},{"_id":"themes/next/languages/zh-Hans.yml","hash":"f6c9fafa0f5f0050cd07ca2cf5e38fbae3e28145","modified":1506012240719},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1506012240719},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1506012240719},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1506012240719},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1506012240723},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1506012240723},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1506012240723},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1506012240723},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1506012240723},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1506012240723},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1506012240723},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1506012240723},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1506012240735},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1506012240735},{"_id":"source/images/hexo-editor.png","hash":"ff1395a5e76f4b5aea88a0b015a874b0d9da0690","modified":1506012240691},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1506012240719},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1506012240719},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1506012240719},{"_id":"themes/next/layout/_macro/post.swig","hash":"e6016def9b512188f4c2725399c9adc7bc41cdae","modified":1506012240723},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1506012240723},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43d8830bb19da4fc7a5773866be19fa066b62645","modified":1506012240723},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1506012240723},{"_id":"themes/next/layout/_partials/comments.swig","hash":"78ccfc1dc915247c1fec3c86d742e0f4c2f6d99c","modified":1506012240723},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1506012240723},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1506012240723},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1506012240723},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1506012240723},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1506012240723},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1506012240723},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1506012240723},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1506012240723},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1506012240723},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1506012240723},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1506012240723},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1506012240723},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1506012240723},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1506012240723},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1506012240723},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1506012240723},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1506012240727},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1506012240727},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1506012240727},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1506012240727},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1506012240727},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1506012240727},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1506012240727},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1506012240727},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1506012240727},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1506012240727},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506012240727},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506012240727},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1506012240727},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1506012240727},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1506012240727},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506012240723},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506012240723},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506012240727},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506012240727},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506012240727},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506012240727},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1506012240727},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1506012240719},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1506012240719},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1506012240723},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1506012240723},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1506012240723},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1506012240723},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1506012240723},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1506012240723},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1506012240723},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1506012240723},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1506012240723},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1506012240723},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4abc01bc870e1d7a783cdbd26166edc782a6a4f4","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1506012240723},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1506012240727},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1506012240727},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1506012240727},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1506012240727},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1506012240727},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1506012240727},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1506012240727},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1506012240727},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1506012240727},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1506012240727},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1506012240727},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1506012240727},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1506012240727},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1506012240727},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1506012240727},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1506012240731},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1506012240731},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1506012240731},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1506012240731},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1506012240735},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1506012240735},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1506012240735},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1506012240735},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1506012240735},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1506012240735},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1506012240735},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1506012240735},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1506012240735},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1506012240735},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1506012240723},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"ea8078fa9e10be2bb042749d8b6a97adc38f914c","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1506012240723},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1506012240727},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1506012240727},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1506012240727},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1506012240727},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1506012240727},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1506012240727},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1506012240727},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1506012240731},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1506012240731},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1506012240731},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1506012240735},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1506012240735},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1506012240735},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1506012240735},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1506012240735},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"fdfadbb4483043c7e0afd541ee9712389e633517","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1506012240723},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1506012240723},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1506012240727},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1506012240727},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1506012240731},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1506012240731},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1506012240731},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1506012240731},{"_id":"source/images/debug.gif","hash":"cfeea5b926c6a3714a3e7f4ae2505263199e6f9b","modified":1506012240691},{"_id":"public/feed.xml","hash":"2b1527aabeb687daa882490683756eba8309b929","modified":1506018295519},{"_id":"public/content.json","hash":"9d72282e8444cac583364b7d27ca1f50abc502bd","modified":1506018295521},{"_id":"public/db.xml","hash":"97e1d6ff91388458bb0df5de4688846106341772","modified":1506018295521},{"_id":"public/categories/index.html","hash":"83450e5c8c439c44ed0c096a19371f86ca5064cf","modified":1506018295524},{"_id":"public/tags/index.html","hash":"013191509e9a5ba187443e7ea5ee2e9c7d70bc1d","modified":1506018295524},{"_id":"public/archives/index.html","hash":"87baaae4f1c8d069adc3fa6a6e9a2afaaed98875","modified":1506018295524},{"_id":"public/archives/2016/index.html","hash":"d3c5f7024fd6ae08aa8ccf925576685b19447b8d","modified":1506018295524},{"_id":"public/archives/2016/08/index.html","hash":"8d016f900f7a41ca71a7833200fa5138eabf8fdc","modified":1506018295524},{"_id":"public/tags/hexo/index.html","hash":"6d00c2b444cfc8f2692ff7d22c6e5ddc444f76b9","modified":1506018295524},{"_id":"public/tags/blog/index.html","hash":"d05b10dd333cbc53b925542eccf65c21fd6b003b","modified":1506018295524},{"_id":"public/categories/hexo/index.html","hash":"c1645a20b72d09f02dee2fa8ad8c0bcc71f00e34","modified":1506018295525},{"_id":"public/categories/hexo/설치/index.html","hash":"69c9026f8a6ac8a6fadd1d1115f572d1b1367294","modified":1506018295525},{"_id":"public/2016/08/20/hexo-install/index.html","hash":"753cd592c0657b18a28a51c05f3192da361305e1","modified":1506018295525},{"_id":"public/index.html","hash":"0353b5f7d986b1d9a912ec6001b6a90f3f018cd8","modified":1506018295525},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1506018295549},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1506018295549},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1506018295549},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1506018295549},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1506018295549},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1506018295549},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1506018295549},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1506018295549},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1506018295550},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506018295550},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1506018295550},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1506018295550},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1506018295550},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1506018295550},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1506018295550},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1506018295550},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1506018295550},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1506018295550},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1506018295550},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1506018295550},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1506018295550},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1506018295550},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1506018295551},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1506018295551},{"_id":"public/images/hexo-editor.png","hash":"ff1395a5e76f4b5aea88a0b015a874b0d9da0690","modified":1506018296168},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1506018296169},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1506018296179},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1506018296179},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1506018296179},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1506018296184},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1506018296184},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1506018296184},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1506018296184},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1506018296185},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1506018296185},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1506018296185},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1506018296185},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1506018296185},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1506018296185},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1506018296185},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1506018296185},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1506018296185},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1506018296185},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1506018296185},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1506018296185},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1506018296185},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1506018296185},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1506018296185},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1506018296185},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1506018296185},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1506018296185},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1506018296185},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1506018296185},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1506018296185},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1506018296186},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1506018296186},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1506018296186},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1506018296186},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1506018296186},{"_id":"public/css/main.css","hash":"5438e91743def7b43e7be44d8787b6dbb15d91d5","modified":1506018296186},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1506018296186},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1506018296186},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1506018296186},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1506018296186},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1506018296186},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1506018296186},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1506018296186},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1506018296186},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1506018296186},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1506018296186},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1506018296186},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1506018296191},{"_id":"public/images/debug.gif","hash":"cfeea5b926c6a3714a3e7f4ae2505263199e6f9b","modified":1506018296200}],"Category":[{"name":"hexo","_id":"cj7usepam0004me3syxhu1hli"},{"name":"react","_id":"cj7usepas0007me3s37cqudjb"},{"name":"설치","parent":"cj7usepam0004me3syxhu1hli","_id":"cj7usepaz000gme3skoj619w3"}],"Data":[],"Page":[{"title":"All categories","type":"categories","_content":"","source":"categories/index.md","raw":"title: \"All categories\"\ntype: \"categories\"\n---\n","date":"2017-09-21T18:16:14.003Z","updated":"2017-09-21T16:44:00.667Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj7usepaf0001me3sgvpqk56a","content":"","excerpt":"","more":""},{"title":"Tags","type":"tags","_content":"","source":"tags/index.md","raw":"title: \"Tags\"\ntype: \"tags\"\n---","date":"2017-09-21T18:16:14.003Z","updated":"2017-09-21T16:44:00.691Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj7usepaj0003me3shsdo0z9d","content":"","excerpt":"","more":""}],"Post":[{"title":"(Hexo로 포스팅하기 2) Hexo로 글쓰기","date":"2017-09-21T16:44:00.000Z","_content":"\n## 포스팅하기\n\n## 초안(draft) 작성\n포스팅을 할 때 글을 조금씩 완성해나가면서 포스팅이 마음에 들 때 다른 사람들이 봐주길 원할 것이다. Hexo에서는 발행하기 이전 단계로 초안(draft)를 작성 할 수 있다.</br>\n초안을 작성하는 법은 간단하다. 다음 명령어를 입력하면 된다.\n```bash\n$ hexo new draft <title>\n```\n이 명령어를 입력하면 source/_draft 폴더를 생성하여 해당 초안을 생성해 준다.\n![생성된 초안](http://d.pr/i/1kbMP+)\n초안을 블로그에서 확인하기 위해서는 다음처럼 draft 옵션을 추가해주면 된다.\n```bash\n$ hexo server --draft\n```\n","source":"_drafts/hexo-writing.md","raw":"title: (Hexo로 포스팅하기 2) Hexo로 글쓰기\ntags:\n  - hexo\n  - blog\ncategories:\n  - hexo\ndate: 2017-09-22 01:44:00\n---\n\n## 포스팅하기\n\n## 초안(draft) 작성\n포스팅을 할 때 글을 조금씩 완성해나가면서 포스팅이 마음에 들 때 다른 사람들이 봐주길 원할 것이다. Hexo에서는 발행하기 이전 단계로 초안(draft)를 작성 할 수 있다.</br>\n초안을 작성하는 법은 간단하다. 다음 명령어를 입력하면 된다.\n```bash\n$ hexo new draft <title>\n```\n이 명령어를 입력하면 source/_draft 폴더를 생성하여 해당 초안을 생성해 준다.\n![생성된 초안](http://d.pr/i/1kbMP+)\n초안을 블로그에서 확인하기 위해서는 다음처럼 draft 옵션을 추가해주면 된다.\n```bash\n$ hexo server --draft\n```\n","slug":"hexo-writing","published":0,"updated":"2017-09-21T18:23:16.451Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7usepaa0000me3sd44nuiie","content":"<h2 id=\"포스팅하기\"><a href=\"#포스팅하기\" class=\"headerlink\" title=\"포스팅하기\"></a>포스팅하기</h2><h2 id=\"초안-draft-작성\"><a href=\"#초안-draft-작성\" class=\"headerlink\" title=\"초안(draft) 작성\"></a>초안(draft) 작성</h2><p>포스팅을 할 때 글을 조금씩 완성해나가면서 포스팅이 마음에 들 때 다른 사람들이 봐주길 원할 것이다. Hexo에서는 발행하기 이전 단계로 초안(draft)를 작성 할 수 있다.<br><br>초안을 작성하는 법은 간단하다. 다음 명령어를 입력하면 된다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new draft &lt;title&gt;</div></pre></td></tr></table></figure></p>\n<p>이 명령어를 입력하면 source/_draft 폴더를 생성하여 해당 초안을 생성해 준다.<br><img src=\"http://d.pr/i/1kbMP+\" alt=\"생성된 초안\"><br>초안을 블로그에서 확인하기 위해서는 다음처럼 draft 옵션을 추가해주면 된다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server --draft</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h2 id=\"포스팅하기\"><a href=\"#포스팅하기\" class=\"headerlink\" title=\"포스팅하기\"></a>포스팅하기</h2><h2 id=\"초안-draft-작성\"><a href=\"#초안-draft-작성\" class=\"headerlink\" title=\"초안(draft) 작성\"></a>초안(draft) 작성</h2><p>포스팅을 할 때 글을 조금씩 완성해나가면서 포스팅이 마음에 들 때 다른 사람들이 봐주길 원할 것이다. Hexo에서는 발행하기 이전 단계로 초안(draft)를 작성 할 수 있다.</br><br>초안을 작성하는 법은 간단하다. 다음 명령어를 입력하면 된다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new draft &lt;title&gt;</div></pre></td></tr></table></figure></p>\n<p>이 명령어를 입력하면 source/_draft 폴더를 생성하여 해당 초안을 생성해 준다.<br><img src=\"http://d.pr/i/1kbMP+\" alt=\"생성된 초안\"><br>초안을 블로그에서 확인하기 위해서는 다음처럼 draft 옵션을 추가해주면 된다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server --draft</div></pre></td></tr></table></figure></p>\n"},{"title":"React DnD - React에서 Drag & Drop을 사용하자.","_content":"## 시작하기에 앞서\n이 글은 [React DnD 공식 사이트](http://react-dnd.github.io/react-dnd/docs-overview.html)를 참고하여 작성하였으며, 읽으며 정리용으로 쓴 글로 번역문으로 보일 수도 있습니다.\n\n## React-dnd란?\nReact-dnd는 React의 특징중 하나인 Higher-Order Components를 사용하는 Drag & Drop을 위한 라이브러리 중 하나이다. backend로는 [HTML5의 drag and drop API](https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API)를 사용하고 있다. 이 때문에 모바일에서의 drag & drop은 지원할 수 없는 단점이 있지만, 추후에 개선될거라고 한다.\nReact-dnd는 내부에서 Redux를 사용하는데, DOM 이벤트를 React DnD가 처리할 수 있는 내부의 Redux 액션으로 변환한다. React DnD가 처리할 수 있는 데이터로는 Item와 Type가 있다. 앞으로는 React DnD에서 사용하는 구성요소들을 알아보겠다.\n\n## Items와 Types \nReact DnD에서는 화면에서 어떤 것이든 드래그 할 때, 컴포넌트나 DOM node가 드래그 되고 있다고 하지 않는다. 대신, 특정 Type의 Item이 드래그 된다고 한다.\nItem이란, 어떤 것이 드래그 되고 있는지를 알려주는 단순한 JavaScript Object이다. 예를 들어, 체스게임에서 게임 말을 집었을 때, Item은 { fromCell: 'C5', piece: 'queen' }처럼 될 것이다. 이처럼 드래그된 데이터를 단순한 Object로 묘사하는 것은 컴포넌트가 서로 모르게 해준다.\nType은 당신의 App에서 Item을 유일하게 구분하는데 사용되는 문자열(또는 [symbol](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Symbol))이다. 체스게임에서라면, '게임 말' Type을 정의할 수 있을 것이다. Type은 어떤 drage source와 drop target이 서로 호환되는지를 명세하게 해준다.\n\n## Monitor\nDrag & Drop은 본질적으로 상태기반이다. 상태는 드래그 되고 있는지 아닌지 등이 될 수 있다.\nReact DnD는 상태를 Monitor라 불리는 내부 상태 저장소를 통해 당신의 컴포넌트에 전해진다. **Monitor는 당신이 Drag & Drop의 상태 변화에 따라, 당신의 컴포넌트의 prop을 업데이트해준다.** Drag & Drop 상태를 추적하는 각 컴포넌트를 위해, 당신은 Monitor로부터 관련된 정보를 받는 collect 함수를 정의해줘야 한다.\n\n체스에서 '게임 말'이 드래그될 때, 체스 셀을 강조하고 싶다고 해보자. `Cell` 컴포넌트를 위한 collect 함수는 다음과 같은 것이다.\n\n```javascript\nfunction collect(monitor) {\n  return {\n    highlighted: monitor.canDrop(),\n    hovered: monitor.isOver()\n  };\n}\n```\n이것은 React DnD에게 `highlighted`와 `hovered`의 최신값을 모든 `Cell` 인스턴스에 prop으로 전달해 주도록 지시하는 코드이다. \n\n## Connector\n만약 백엔드가 DOM 이벤트를 다루지만, 컴포넌트가 DOM을 묘사하기 위해 React를 사용한다면, 백엔드는 어떤 DOM node에 대기하고 있는지를 어떻게 알 수 있을까. 이를 해결하기 위해, Connector가 필요하다. **Connector는 당신의 `render` 함수에서 미리 정의된 역할(drag source, drag preview, drop target)중 하나를 DOM node에 할당하도록 해준다.**\n\n사실, Connector는 collect 함수에서 monitor와 함께 매개변수로 사용된다. Connector를 사용해서 어떻게 drop target을 명시하는지 보자.\n```javascript\nfunction collect(connect, monitor) {\n  return {\n    highlighted: monitor.canDrop(),\n    hovered: monitor.isOver(),\n    connectDropTarget: connect.dropTarget()\n  };\n}\n```\n\n컴포넌트의 `render` 함수에서, 우리는 monitor로부터 얻어진 데이터와 connector로부터 얻어진 함수 모두에 접근할 수 있다.\n\n```javascript\nrender() {\n  const { highlighted, hovered, connectDropTarget } = this.props;\n\n  return connectDropTarget(\n    <div className={classSet({\n      'Cell': true,\n      'Cell--highlighted': highlighted,\n      'Cell--hovered': hovered\n    })}>\n      {this.props.children}\n    </div>\n  );\n}\n```\n\n`connectDropTarget` 호출은 React DnD에게 우리 컴포넌트의 root DOM node가 유효한 drop target이고, 이것의 hover와 drop 이벤트가 백엔드에 의해서 다뤄져야만 한다는 것을 알려준다. \n\n\n## Higher-Order Components와 ES7 decorators에 대해\nHigher-Order Components를 처음 듣는다면, [React 공식문서의 아티클](https://facebook.github.io/react/docs/higher-order-components.html)과 [Mixins Are Dead. Long Live Composition](https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750)를 읽어보기를 권한다.\n\n**higher-order 컴포넌트는 단지 React 컴포넌트 클래스를 가지고, 다른 React 컴포넌트 클래스를 반환하는 함수이다.** 라이브러리에 의해 제공된 Wrapping 컴포넌트는 `render` 함수 안 당신의 컴포넌트를 렌더링하고 prop을 당신의 컴포넌트에 전달한다. 또한, 몇몇 유용한 기능도 추가해준다.\n\nReact DnD에서, [DragSource](http://react-dnd.github.io/react-dnd/docs-drag-source.html)와 [DragTarget](http://react-dnd.github.io/react-dnd/docs-drop-target.html)은 사실 higher-order 컴포넌트이다. \n\n이제 당신의 컴포넌트를 [DragSource](http://react-dnd.github.io/react-dnd/docs-drag-source.html)로 감싸는지 알아보자.\n```javascript\nimport { DragSource } from 'react-dnd';\n\nclass YourComponent {\n  /* ... */\n}\n\nexport default DragSource(/* ... */)(YourComponent);\n```\n\n맨 마지막 줄에서 추가로 감싸는 과정이 번거롭다고 생각할 수도 있다.\n이를 해결하기 위해 ES7에 추가된 [decorator syntax](https://github.com/wycats/javascript-decorators)를 사용할 수 있다. 물론 아직 ES7을 지원하는 브라우저는 많지 않으므로 Babel를 사용해야 한며, 이미 ES6를 위해 Babel을 사용하고 있었다면 .babelrc 파일에 `{ \"stage\": 1 }`을 추가해주면 된다.\n\n## 한데 모아서 보자\n마지막으로 지금까지 설명한 요소들을 사용하는 예제를 보도록 하자. 다음 예제는 Card 컴포넌트를 drag source로 감싸는 예제이다.\n\n```javascript\nimport React from 'react';\nimport { DragSource } from 'react-dnd';\n\n// Drag sources and drop targets only interact\n// if they have the same string type.\n// You want to keep types in a separate file with\n// the rest of your app's constants.\nconst Types = {\n  CARD: 'card'\n};\n\n/**\n * Specifies the drag source contract.\n * Only `beginDrag` function is required.\n */\nconst cardSource = {\n  beginDrag(props) {\n    // Return the data describing the dragged item\n    const item = { id: props.id };\n    return item;\n  },\n\n  endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    // When dropped on a compatible target, do something\n    const item = monitor.getItem();\n    const dropResult = monitor.getDropResult();\n    CardActions.moveCardToList(item.id, dropResult.listId);\n  }\n};\n\n// Use the decorator syntax\n@DragSource(Types.CARD, cardSource, (connect, monitor) => ({\n  // Call this function inside render()\n  // to let React DnD handle the drag events:\n  connectDragSource: connect.dragSource(),\n  // You can ask the monitor about the current drag state:\n  isDragging: monitor.isDragging()\n}))\nexport default class Card {\n  render() {\n    // Your component receives its own props as usual\n    const { id } = this.props;\n\n    // These two props are injected by React DnD,\n    // as defined by your `collect` function above:\n    const { isDragging, connectDragSource } = this.props;\n\n    return connectDragSource(\n      <div>\n        I am a draggable card number {id}\n        {isDragging && ' (and I am being dragged now)'}\n      </div>\n    );\n  }\n}\n```\n\n## 마치며\n\n\n\n## 참고 링크\n- [React-dnd](http://react-dnd.github.io/react-dnd/docs-overview.html)\n- [Higher-Order Components](https://facebook.github.io/react/docs/higher-order-components.html)\n- [ES7 decorators](https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841)","source":"_drafts/react-dnd-0.md","raw":"---\ntitle: React DnD - React에서 Drag & Drop을 사용하자.\ncategories: react\ntags:\n- react-dnd\n- react\n---\n## 시작하기에 앞서\n이 글은 [React DnD 공식 사이트](http://react-dnd.github.io/react-dnd/docs-overview.html)를 참고하여 작성하였으며, 읽으며 정리용으로 쓴 글로 번역문으로 보일 수도 있습니다.\n\n## React-dnd란?\nReact-dnd는 React의 특징중 하나인 Higher-Order Components를 사용하는 Drag & Drop을 위한 라이브러리 중 하나이다. backend로는 [HTML5의 drag and drop API](https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API)를 사용하고 있다. 이 때문에 모바일에서의 drag & drop은 지원할 수 없는 단점이 있지만, 추후에 개선될거라고 한다.\nReact-dnd는 내부에서 Redux를 사용하는데, DOM 이벤트를 React DnD가 처리할 수 있는 내부의 Redux 액션으로 변환한다. React DnD가 처리할 수 있는 데이터로는 Item와 Type가 있다. 앞으로는 React DnD에서 사용하는 구성요소들을 알아보겠다.\n\n## Items와 Types \nReact DnD에서는 화면에서 어떤 것이든 드래그 할 때, 컴포넌트나 DOM node가 드래그 되고 있다고 하지 않는다. 대신, 특정 Type의 Item이 드래그 된다고 한다.\nItem이란, 어떤 것이 드래그 되고 있는지를 알려주는 단순한 JavaScript Object이다. 예를 들어, 체스게임에서 게임 말을 집었을 때, Item은 { fromCell: 'C5', piece: 'queen' }처럼 될 것이다. 이처럼 드래그된 데이터를 단순한 Object로 묘사하는 것은 컴포넌트가 서로 모르게 해준다.\nType은 당신의 App에서 Item을 유일하게 구분하는데 사용되는 문자열(또는 [symbol](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Symbol))이다. 체스게임에서라면, '게임 말' Type을 정의할 수 있을 것이다. Type은 어떤 drage source와 drop target이 서로 호환되는지를 명세하게 해준다.\n\n## Monitor\nDrag & Drop은 본질적으로 상태기반이다. 상태는 드래그 되고 있는지 아닌지 등이 될 수 있다.\nReact DnD는 상태를 Monitor라 불리는 내부 상태 저장소를 통해 당신의 컴포넌트에 전해진다. **Monitor는 당신이 Drag & Drop의 상태 변화에 따라, 당신의 컴포넌트의 prop을 업데이트해준다.** Drag & Drop 상태를 추적하는 각 컴포넌트를 위해, 당신은 Monitor로부터 관련된 정보를 받는 collect 함수를 정의해줘야 한다.\n\n체스에서 '게임 말'이 드래그될 때, 체스 셀을 강조하고 싶다고 해보자. `Cell` 컴포넌트를 위한 collect 함수는 다음과 같은 것이다.\n\n```javascript\nfunction collect(monitor) {\n  return {\n    highlighted: monitor.canDrop(),\n    hovered: monitor.isOver()\n  };\n}\n```\n이것은 React DnD에게 `highlighted`와 `hovered`의 최신값을 모든 `Cell` 인스턴스에 prop으로 전달해 주도록 지시하는 코드이다. \n\n## Connector\n만약 백엔드가 DOM 이벤트를 다루지만, 컴포넌트가 DOM을 묘사하기 위해 React를 사용한다면, 백엔드는 어떤 DOM node에 대기하고 있는지를 어떻게 알 수 있을까. 이를 해결하기 위해, Connector가 필요하다. **Connector는 당신의 `render` 함수에서 미리 정의된 역할(drag source, drag preview, drop target)중 하나를 DOM node에 할당하도록 해준다.**\n\n사실, Connector는 collect 함수에서 monitor와 함께 매개변수로 사용된다. Connector를 사용해서 어떻게 drop target을 명시하는지 보자.\n```javascript\nfunction collect(connect, monitor) {\n  return {\n    highlighted: monitor.canDrop(),\n    hovered: monitor.isOver(),\n    connectDropTarget: connect.dropTarget()\n  };\n}\n```\n\n컴포넌트의 `render` 함수에서, 우리는 monitor로부터 얻어진 데이터와 connector로부터 얻어진 함수 모두에 접근할 수 있다.\n\n```javascript\nrender() {\n  const { highlighted, hovered, connectDropTarget } = this.props;\n\n  return connectDropTarget(\n    <div className={classSet({\n      'Cell': true,\n      'Cell--highlighted': highlighted,\n      'Cell--hovered': hovered\n    })}>\n      {this.props.children}\n    </div>\n  );\n}\n```\n\n`connectDropTarget` 호출은 React DnD에게 우리 컴포넌트의 root DOM node가 유효한 drop target이고, 이것의 hover와 drop 이벤트가 백엔드에 의해서 다뤄져야만 한다는 것을 알려준다. \n\n\n## Higher-Order Components와 ES7 decorators에 대해\nHigher-Order Components를 처음 듣는다면, [React 공식문서의 아티클](https://facebook.github.io/react/docs/higher-order-components.html)과 [Mixins Are Dead. Long Live Composition](https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750)를 읽어보기를 권한다.\n\n**higher-order 컴포넌트는 단지 React 컴포넌트 클래스를 가지고, 다른 React 컴포넌트 클래스를 반환하는 함수이다.** 라이브러리에 의해 제공된 Wrapping 컴포넌트는 `render` 함수 안 당신의 컴포넌트를 렌더링하고 prop을 당신의 컴포넌트에 전달한다. 또한, 몇몇 유용한 기능도 추가해준다.\n\nReact DnD에서, [DragSource](http://react-dnd.github.io/react-dnd/docs-drag-source.html)와 [DragTarget](http://react-dnd.github.io/react-dnd/docs-drop-target.html)은 사실 higher-order 컴포넌트이다. \n\n이제 당신의 컴포넌트를 [DragSource](http://react-dnd.github.io/react-dnd/docs-drag-source.html)로 감싸는지 알아보자.\n```javascript\nimport { DragSource } from 'react-dnd';\n\nclass YourComponent {\n  /* ... */\n}\n\nexport default DragSource(/* ... */)(YourComponent);\n```\n\n맨 마지막 줄에서 추가로 감싸는 과정이 번거롭다고 생각할 수도 있다.\n이를 해결하기 위해 ES7에 추가된 [decorator syntax](https://github.com/wycats/javascript-decorators)를 사용할 수 있다. 물론 아직 ES7을 지원하는 브라우저는 많지 않으므로 Babel를 사용해야 한며, 이미 ES6를 위해 Babel을 사용하고 있었다면 .babelrc 파일에 `{ \"stage\": 1 }`을 추가해주면 된다.\n\n## 한데 모아서 보자\n마지막으로 지금까지 설명한 요소들을 사용하는 예제를 보도록 하자. 다음 예제는 Card 컴포넌트를 drag source로 감싸는 예제이다.\n\n```javascript\nimport React from 'react';\nimport { DragSource } from 'react-dnd';\n\n// Drag sources and drop targets only interact\n// if they have the same string type.\n// You want to keep types in a separate file with\n// the rest of your app's constants.\nconst Types = {\n  CARD: 'card'\n};\n\n/**\n * Specifies the drag source contract.\n * Only `beginDrag` function is required.\n */\nconst cardSource = {\n  beginDrag(props) {\n    // Return the data describing the dragged item\n    const item = { id: props.id };\n    return item;\n  },\n\n  endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    // When dropped on a compatible target, do something\n    const item = monitor.getItem();\n    const dropResult = monitor.getDropResult();\n    CardActions.moveCardToList(item.id, dropResult.listId);\n  }\n};\n\n// Use the decorator syntax\n@DragSource(Types.CARD, cardSource, (connect, monitor) => ({\n  // Call this function inside render()\n  // to let React DnD handle the drag events:\n  connectDragSource: connect.dragSource(),\n  // You can ask the monitor about the current drag state:\n  isDragging: monitor.isDragging()\n}))\nexport default class Card {\n  render() {\n    // Your component receives its own props as usual\n    const { id } = this.props;\n\n    // These two props are injected by React DnD,\n    // as defined by your `collect` function above:\n    const { isDragging, connectDragSource } = this.props;\n\n    return connectDragSource(\n      <div>\n        I am a draggable card number {id}\n        {isDragging && ' (and I am being dragged now)'}\n      </div>\n    );\n  }\n}\n```\n\n## 마치며\n\n\n\n## 참고 링크\n- [React-dnd](http://react-dnd.github.io/react-dnd/docs-overview.html)\n- [Higher-Order Components](https://facebook.github.io/react/docs/higher-order-components.html)\n- [ES7 decorators](https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841)","slug":"react-dnd-0","published":0,"date":"2017-09-21T18:16:14.003Z","updated":"2017-09-21T16:44:00.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7usepah0002me3sly75tgfx","content":"<h2 id=\"시작하기에-앞서\"><a href=\"#시작하기에-앞서\" class=\"headerlink\" title=\"시작하기에 앞서\"></a>시작하기에 앞서</h2><p>이 글은 <a href=\"http://react-dnd.github.io/react-dnd/docs-overview.html\" target=\"_blank\" rel=\"external\">React DnD 공식 사이트</a>를 참고하여 작성하였으며, 읽으며 정리용으로 쓴 글로 번역문으로 보일 수도 있습니다.</p>\n<h2 id=\"React-dnd란\"><a href=\"#React-dnd란\" class=\"headerlink\" title=\"React-dnd란?\"></a>React-dnd란?</h2><p>React-dnd는 React의 특징중 하나인 Higher-Order Components를 사용하는 Drag &amp; Drop을 위한 라이브러리 중 하나이다. backend로는 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API\" target=\"_blank\" rel=\"external\">HTML5의 drag and drop API</a>를 사용하고 있다. 이 때문에 모바일에서의 drag &amp; drop은 지원할 수 없는 단점이 있지만, 추후에 개선될거라고 한다.<br>React-dnd는 내부에서 Redux를 사용하는데, DOM 이벤트를 React DnD가 처리할 수 있는 내부의 Redux 액션으로 변환한다. React DnD가 처리할 수 있는 데이터로는 Item와 Type가 있다. 앞으로는 React DnD에서 사용하는 구성요소들을 알아보겠다.</p>\n<h2 id=\"Items와-Types\"><a href=\"#Items와-Types\" class=\"headerlink\" title=\"Items와 Types\"></a>Items와 Types</h2><p>React DnD에서는 화면에서 어떤 것이든 드래그 할 때, 컴포넌트나 DOM node가 드래그 되고 있다고 하지 않는다. 대신, 특정 Type의 Item이 드래그 된다고 한다.<br>Item이란, 어떤 것이 드래그 되고 있는지를 알려주는 단순한 JavaScript Object이다. 예를 들어, 체스게임에서 게임 말을 집었을 때, Item은 { fromCell: ‘C5’, piece: ‘queen’ }처럼 될 것이다. 이처럼 드래그된 데이터를 단순한 Object로 묘사하는 것은 컴포넌트가 서로 모르게 해준다.<br>Type은 당신의 App에서 Item을 유일하게 구분하는데 사용되는 문자열(또는 <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" target=\"_blank\" rel=\"external\">symbol</a>)이다. 체스게임에서라면, ‘게임 말’ Type을 정의할 수 있을 것이다. Type은 어떤 drage source와 drop target이 서로 호환되는지를 명세하게 해준다.</p>\n<h2 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h2><p>Drag &amp; Drop은 본질적으로 상태기반이다. 상태는 드래그 되고 있는지 아닌지 등이 될 수 있다.<br>React DnD는 상태를 Monitor라 불리는 내부 상태 저장소를 통해 당신의 컴포넌트에 전해진다. <strong>Monitor는 당신이 Drag &amp; Drop의 상태 변화에 따라, 당신의 컴포넌트의 prop을 업데이트해준다.</strong> Drag &amp; Drop 상태를 추적하는 각 컴포넌트를 위해, 당신은 Monitor로부터 관련된 정보를 받는 collect 함수를 정의해줘야 한다.</p>\n<p>체스에서 ‘게임 말’이 드래그될 때, 체스 셀을 강조하고 싶다고 해보자. <code>Cell</code> 컴포넌트를 위한 collect 함수는 다음과 같은 것이다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">collect</span>(<span class=\"params\">monitor</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">highlighted</span>: monitor.canDrop(),</div><div class=\"line\">    <span class=\"attr\">hovered</span>: monitor.isOver()</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>이것은 React DnD에게 <code>highlighted</code>와 <code>hovered</code>의 최신값을 모든 <code>Cell</code> 인스턴스에 prop으로 전달해 주도록 지시하는 코드이다. </p>\n<h2 id=\"Connector\"><a href=\"#Connector\" class=\"headerlink\" title=\"Connector\"></a>Connector</h2><p>만약 백엔드가 DOM 이벤트를 다루지만, 컴포넌트가 DOM을 묘사하기 위해 React를 사용한다면, 백엔드는 어떤 DOM node에 대기하고 있는지를 어떻게 알 수 있을까. 이를 해결하기 위해, Connector가 필요하다. <strong>Connector는 당신의 <code>render</code> 함수에서 미리 정의된 역할(drag source, drag preview, drop target)중 하나를 DOM node에 할당하도록 해준다.</strong></p>\n<p>사실, Connector는 collect 함수에서 monitor와 함께 매개변수로 사용된다. Connector를 사용해서 어떻게 drop target을 명시하는지 보자.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">collect</span>(<span class=\"params\">connect, monitor</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">highlighted</span>: monitor.canDrop(),</div><div class=\"line\">    <span class=\"attr\">hovered</span>: monitor.isOver(),</div><div class=\"line\">    <span class=\"attr\">connectDropTarget</span>: connect.dropTarget()</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>컴포넌트의 <code>render</code> 함수에서, 우리는 monitor로부터 얻어진 데이터와 connector로부터 얻어진 함수 모두에 접근할 수 있다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">render() &#123;</div><div class=\"line\">  <span class=\"keyword\">const</span> &#123; highlighted, hovered, connectDropTarget &#125; = <span class=\"keyword\">this</span>.props;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> connectDropTarget(</div><div class=\"line\">    &lt;div className=&#123;classSet(&#123;</div><div class=\"line\">      'Cell': true,</div><div class=\"line\">      'Cell--highlighted': highlighted,</div><div class=\"line\">      'Cell--hovered': hovered</div><div class=\"line\">    &#125;)&#125;&gt;</div><div class=\"line\">      &#123;this.props.children&#125;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">  );</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>connectDropTarget</code> 호출은 React DnD에게 우리 컴포넌트의 root DOM node가 유효한 drop target이고, 이것의 hover와 drop 이벤트가 백엔드에 의해서 다뤄져야만 한다는 것을 알려준다. </p>\n<h2 id=\"Higher-Order-Components와-ES7-decorators에-대해\"><a href=\"#Higher-Order-Components와-ES7-decorators에-대해\" class=\"headerlink\" title=\"Higher-Order Components와 ES7 decorators에 대해\"></a>Higher-Order Components와 ES7 decorators에 대해</h2><p>Higher-Order Components를 처음 듣는다면, <a href=\"https://facebook.github.io/react/docs/higher-order-components.html\" target=\"_blank\" rel=\"external\">React 공식문서의 아티클</a>과 <a href=\"https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750\" target=\"_blank\" rel=\"external\">Mixins Are Dead. Long Live Composition</a>를 읽어보기를 권한다.</p>\n<p><strong>higher-order 컴포넌트는 단지 React 컴포넌트 클래스를 가지고, 다른 React 컴포넌트 클래스를 반환하는 함수이다.</strong> 라이브러리에 의해 제공된 Wrapping 컴포넌트는 <code>render</code> 함수 안 당신의 컴포넌트를 렌더링하고 prop을 당신의 컴포넌트에 전달한다. 또한, 몇몇 유용한 기능도 추가해준다.</p>\n<p>React DnD에서, <a href=\"http://react-dnd.github.io/react-dnd/docs-drag-source.html\" target=\"_blank\" rel=\"external\">DragSource</a>와 <a href=\"http://react-dnd.github.io/react-dnd/docs-drop-target.html\" target=\"_blank\" rel=\"external\">DragTarget</a>은 사실 higher-order 컴포넌트이다. </p>\n<p>이제 당신의 컴포넌트를 <a href=\"http://react-dnd.github.io/react-dnd/docs-drag-source.html\" target=\"_blank\" rel=\"external\">DragSource</a>로 감싸는지 알아보자.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123; DragSource &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-dnd'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">YourComponent</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">/* ... */</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DragSource(<span class=\"comment\">/* ... */</span>)(YourComponent);</div></pre></td></tr></table></figure></p>\n<p>맨 마지막 줄에서 추가로 감싸는 과정이 번거롭다고 생각할 수도 있다.<br>이를 해결하기 위해 ES7에 추가된 <a href=\"https://github.com/wycats/javascript-decorators\" target=\"_blank\" rel=\"external\">decorator syntax</a>를 사용할 수 있다. 물론 아직 ES7을 지원하는 브라우저는 많지 않으므로 Babel를 사용해야 한며, 이미 ES6를 위해 Babel을 사용하고 있었다면 .babelrc 파일에 <code>{ &quot;stage&quot;: 1 }</code>을 추가해주면 된다.</p>\n<h2 id=\"한데-모아서-보자\"><a href=\"#한데-모아서-보자\" class=\"headerlink\" title=\"한데 모아서 보자\"></a>한데 모아서 보자</h2><p>마지막으로 지금까지 설명한 요소들을 사용하는 예제를 보도록 하자. 다음 예제는 Card 컴포넌트를 drag source로 감싸는 예제이다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> &#123; DragSource &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-dnd'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Drag sources and drop targets only interact</span></div><div class=\"line\"><span class=\"comment\">// if they have the same string type.</span></div><div class=\"line\"><span class=\"comment\">// You want to keep types in a separate file with</span></div><div class=\"line\"><span class=\"comment\">// the rest of your app's constants.</span></div><div class=\"line\"><span class=\"keyword\">const</span> Types = &#123;</div><div class=\"line\">  <span class=\"attr\">CARD</span>: <span class=\"string\">'card'</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Specifies the drag source contract.</div><div class=\"line\"> * Only `beginDrag` function is required.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">const</span> cardSource = &#123;</div><div class=\"line\">  beginDrag(props) &#123;</div><div class=\"line\">    <span class=\"comment\">// Return the data describing the dragged item</span></div><div class=\"line\">    <span class=\"keyword\">const</span> item = &#123; <span class=\"attr\">id</span>: props.id &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> item;</div><div class=\"line\">  &#125;,</div><div class=\"line\"></div><div class=\"line\">  endDrag(props, monitor, component) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!monitor.didDrop()) &#123;</div><div class=\"line\">      <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// When dropped on a compatible target, do something</span></div><div class=\"line\">    <span class=\"keyword\">const</span> item = monitor.getItem();</div><div class=\"line\">    <span class=\"keyword\">const</span> dropResult = monitor.getDropResult();</div><div class=\"line\">    CardActions.moveCardToList(item.id, dropResult.listId);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Use the decorator syntax</span></div><div class=\"line\">@DragSource(Types.CARD, cardSource, (connect, monitor) =&gt; (&#123;</div><div class=\"line\">  <span class=\"comment\">// Call this function inside render()</span></div><div class=\"line\">  <span class=\"comment\">// to let React DnD handle the drag events:</span></div><div class=\"line\">  connectDragSource: connect.dragSource(),</div><div class=\"line\">  <span class=\"comment\">// You can ask the monitor about the current drag state:</span></div><div class=\"line\">  isDragging: monitor.isDragging()</div><div class=\"line\">&#125;))</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Card</span> </span>&#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    <span class=\"comment\">// Your component receives its own props as usual</span></div><div class=\"line\">    <span class=\"keyword\">const</span> &#123; id &#125; = <span class=\"keyword\">this</span>.props;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// These two props are injected by React DnD,</span></div><div class=\"line\">    <span class=\"comment\">// as defined by your `collect` function above:</span></div><div class=\"line\">    <span class=\"keyword\">const</span> &#123; isDragging, connectDragSource &#125; = <span class=\"keyword\">this</span>.props;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> connectDragSource(</div><div class=\"line\">      &lt;div&gt;</div><div class=\"line\">        I am a draggable card number &#123;id&#125;</div><div class=\"line\">        &#123;isDragging &amp;&amp; ' (and I am being dragged now)'&#125;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"마치며\"><a href=\"#마치며\" class=\"headerlink\" title=\"마치며\"></a>마치며</h2><h2 id=\"참고-링크\"><a href=\"#참고-링크\" class=\"headerlink\" title=\"참고 링크\"></a>참고 링크</h2><ul>\n<li><a href=\"http://react-dnd.github.io/react-dnd/docs-overview.html\" target=\"_blank\" rel=\"external\">React-dnd</a></li>\n<li><a href=\"https://facebook.github.io/react/docs/higher-order-components.html\" target=\"_blank\" rel=\"external\">Higher-Order Components</a></li>\n<li><a href=\"https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841\" target=\"_blank\" rel=\"external\">ES7 decorators</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"시작하기에-앞서\"><a href=\"#시작하기에-앞서\" class=\"headerlink\" title=\"시작하기에 앞서\"></a>시작하기에 앞서</h2><p>이 글은 <a href=\"http://react-dnd.github.io/react-dnd/docs-overview.html\">React DnD 공식 사이트</a>를 참고하여 작성하였으며, 읽으며 정리용으로 쓴 글로 번역문으로 보일 수도 있습니다.</p>\n<h2 id=\"React-dnd란\"><a href=\"#React-dnd란\" class=\"headerlink\" title=\"React-dnd란?\"></a>React-dnd란?</h2><p>React-dnd는 React의 특징중 하나인 Higher-Order Components를 사용하는 Drag &amp; Drop을 위한 라이브러리 중 하나이다. backend로는 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API\">HTML5의 drag and drop API</a>를 사용하고 있다. 이 때문에 모바일에서의 drag &amp; drop은 지원할 수 없는 단점이 있지만, 추후에 개선될거라고 한다.<br>React-dnd는 내부에서 Redux를 사용하는데, DOM 이벤트를 React DnD가 처리할 수 있는 내부의 Redux 액션으로 변환한다. React DnD가 처리할 수 있는 데이터로는 Item와 Type가 있다. 앞으로는 React DnD에서 사용하는 구성요소들을 알아보겠다.</p>\n<h2 id=\"Items와-Types\"><a href=\"#Items와-Types\" class=\"headerlink\" title=\"Items와 Types\"></a>Items와 Types</h2><p>React DnD에서는 화면에서 어떤 것이든 드래그 할 때, 컴포넌트나 DOM node가 드래그 되고 있다고 하지 않는다. 대신, 특정 Type의 Item이 드래그 된다고 한다.<br>Item이란, 어떤 것이 드래그 되고 있는지를 알려주는 단순한 JavaScript Object이다. 예를 들어, 체스게임에서 게임 말을 집었을 때, Item은 { fromCell: ‘C5’, piece: ‘queen’ }처럼 될 것이다. 이처럼 드래그된 데이터를 단순한 Object로 묘사하는 것은 컴포넌트가 서로 모르게 해준다.<br>Type은 당신의 App에서 Item을 유일하게 구분하는데 사용되는 문자열(또는 <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Symbol\">symbol</a>)이다. 체스게임에서라면, ‘게임 말’ Type을 정의할 수 있을 것이다. Type은 어떤 drage source와 drop target이 서로 호환되는지를 명세하게 해준다.</p>\n<h2 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h2><p>Drag &amp; Drop은 본질적으로 상태기반이다. 상태는 드래그 되고 있는지 아닌지 등이 될 수 있다.<br>React DnD는 상태를 Monitor라 불리는 내부 상태 저장소를 통해 당신의 컴포넌트에 전해진다. <strong>Monitor는 당신이 Drag &amp; Drop의 상태 변화에 따라, 당신의 컴포넌트의 prop을 업데이트해준다.</strong> Drag &amp; Drop 상태를 추적하는 각 컴포넌트를 위해, 당신은 Monitor로부터 관련된 정보를 받는 collect 함수를 정의해줘야 한다.</p>\n<p>체스에서 ‘게임 말’이 드래그될 때, 체스 셀을 강조하고 싶다고 해보자. <code>Cell</code> 컴포넌트를 위한 collect 함수는 다음과 같은 것이다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">collect</span>(<span class=\"params\">monitor</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">highlighted</span>: monitor.canDrop(),</div><div class=\"line\">    <span class=\"attr\">hovered</span>: monitor.isOver()</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>이것은 React DnD에게 <code>highlighted</code>와 <code>hovered</code>의 최신값을 모든 <code>Cell</code> 인스턴스에 prop으로 전달해 주도록 지시하는 코드이다. </p>\n<h2 id=\"Connector\"><a href=\"#Connector\" class=\"headerlink\" title=\"Connector\"></a>Connector</h2><p>만약 백엔드가 DOM 이벤트를 다루지만, 컴포넌트가 DOM을 묘사하기 위해 React를 사용한다면, 백엔드는 어떤 DOM node에 대기하고 있는지를 어떻게 알 수 있을까. 이를 해결하기 위해, Connector가 필요하다. <strong>Connector는 당신의 <code>render</code> 함수에서 미리 정의된 역할(drag source, drag preview, drop target)중 하나를 DOM node에 할당하도록 해준다.</strong></p>\n<p>사실, Connector는 collect 함수에서 monitor와 함께 매개변수로 사용된다. Connector를 사용해서 어떻게 drop target을 명시하는지 보자.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">collect</span>(<span class=\"params\">connect, monitor</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">highlighted</span>: monitor.canDrop(),</div><div class=\"line\">    <span class=\"attr\">hovered</span>: monitor.isOver(),</div><div class=\"line\">    <span class=\"attr\">connectDropTarget</span>: connect.dropTarget()</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>컴포넌트의 <code>render</code> 함수에서, 우리는 monitor로부터 얻어진 데이터와 connector로부터 얻어진 함수 모두에 접근할 수 있다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">render() &#123;</div><div class=\"line\">  <span class=\"keyword\">const</span> &#123; highlighted, hovered, connectDropTarget &#125; = <span class=\"keyword\">this</span>.props;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> connectDropTarget(</div><div class=\"line\">    &lt;div className=&#123;classSet(&#123;</div><div class=\"line\">      'Cell': true,</div><div class=\"line\">      'Cell--highlighted': highlighted,</div><div class=\"line\">      'Cell--hovered': hovered</div><div class=\"line\">    &#125;)&#125;&gt;</div><div class=\"line\">      &#123;this.props.children&#125;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">  );</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>connectDropTarget</code> 호출은 React DnD에게 우리 컴포넌트의 root DOM node가 유효한 drop target이고, 이것의 hover와 drop 이벤트가 백엔드에 의해서 다뤄져야만 한다는 것을 알려준다. </p>\n<h2 id=\"Higher-Order-Components와-ES7-decorators에-대해\"><a href=\"#Higher-Order-Components와-ES7-decorators에-대해\" class=\"headerlink\" title=\"Higher-Order Components와 ES7 decorators에 대해\"></a>Higher-Order Components와 ES7 decorators에 대해</h2><p>Higher-Order Components를 처음 듣는다면, <a href=\"https://facebook.github.io/react/docs/higher-order-components.html\">React 공식문서의 아티클</a>과 <a href=\"https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750\">Mixins Are Dead. Long Live Composition</a>를 읽어보기를 권한다.</p>\n<p><strong>higher-order 컴포넌트는 단지 React 컴포넌트 클래스를 가지고, 다른 React 컴포넌트 클래스를 반환하는 함수이다.</strong> 라이브러리에 의해 제공된 Wrapping 컴포넌트는 <code>render</code> 함수 안 당신의 컴포넌트를 렌더링하고 prop을 당신의 컴포넌트에 전달한다. 또한, 몇몇 유용한 기능도 추가해준다.</p>\n<p>React DnD에서, <a href=\"http://react-dnd.github.io/react-dnd/docs-drag-source.html\">DragSource</a>와 <a href=\"http://react-dnd.github.io/react-dnd/docs-drop-target.html\">DragTarget</a>은 사실 higher-order 컴포넌트이다. </p>\n<p>이제 당신의 컴포넌트를 <a href=\"http://react-dnd.github.io/react-dnd/docs-drag-source.html\">DragSource</a>로 감싸는지 알아보자.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123; DragSource &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-dnd'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">YourComponent</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">/* ... */</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> DragSource(<span class=\"comment\">/* ... */</span>)(YourComponent);</div></pre></td></tr></table></figure></p>\n<p>맨 마지막 줄에서 추가로 감싸는 과정이 번거롭다고 생각할 수도 있다.<br>이를 해결하기 위해 ES7에 추가된 <a href=\"https://github.com/wycats/javascript-decorators\">decorator syntax</a>를 사용할 수 있다. 물론 아직 ES7을 지원하는 브라우저는 많지 않으므로 Babel를 사용해야 한며, 이미 ES6를 위해 Babel을 사용하고 있었다면 .babelrc 파일에 <code>{ &quot;stage&quot;: 1 }</code>을 추가해주면 된다.</p>\n<h2 id=\"한데-모아서-보자\"><a href=\"#한데-모아서-보자\" class=\"headerlink\" title=\"한데 모아서 보자\"></a>한데 모아서 보자</h2><p>마지막으로 지금까지 설명한 요소들을 사용하는 예제를 보도록 하자. 다음 예제는 Card 컴포넌트를 drag source로 감싸는 예제이다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> &#123; DragSource &#125; <span class=\"keyword\">from</span> <span class=\"string\">'react-dnd'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Drag sources and drop targets only interact</span></div><div class=\"line\"><span class=\"comment\">// if they have the same string type.</span></div><div class=\"line\"><span class=\"comment\">// You want to keep types in a separate file with</span></div><div class=\"line\"><span class=\"comment\">// the rest of your app's constants.</span></div><div class=\"line\"><span class=\"keyword\">const</span> Types = &#123;</div><div class=\"line\">  <span class=\"attr\">CARD</span>: <span class=\"string\">'card'</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Specifies the drag source contract.</div><div class=\"line\"> * Only `beginDrag` function is required.</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">const</span> cardSource = &#123;</div><div class=\"line\">  beginDrag(props) &#123;</div><div class=\"line\">    <span class=\"comment\">// Return the data describing the dragged item</span></div><div class=\"line\">    <span class=\"keyword\">const</span> item = &#123; <span class=\"attr\">id</span>: props.id &#125;;</div><div class=\"line\">    <span class=\"keyword\">return</span> item;</div><div class=\"line\">  &#125;,</div><div class=\"line\"></div><div class=\"line\">  endDrag(props, monitor, component) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!monitor.didDrop()) &#123;</div><div class=\"line\">      <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// When dropped on a compatible target, do something</span></div><div class=\"line\">    <span class=\"keyword\">const</span> item = monitor.getItem();</div><div class=\"line\">    <span class=\"keyword\">const</span> dropResult = monitor.getDropResult();</div><div class=\"line\">    CardActions.moveCardToList(item.id, dropResult.listId);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Use the decorator syntax</span></div><div class=\"line\">@DragSource(Types.CARD, cardSource, (connect, monitor) =&gt; (&#123;</div><div class=\"line\">  <span class=\"comment\">// Call this function inside render()</span></div><div class=\"line\">  <span class=\"comment\">// to let React DnD handle the drag events:</span></div><div class=\"line\">  connectDragSource: connect.dragSource(),</div><div class=\"line\">  <span class=\"comment\">// You can ask the monitor about the current drag state:</span></div><div class=\"line\">  isDragging: monitor.isDragging()</div><div class=\"line\">&#125;))</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Card</span> </span>&#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    <span class=\"comment\">// Your component receives its own props as usual</span></div><div class=\"line\">    <span class=\"keyword\">const</span> &#123; id &#125; = <span class=\"keyword\">this</span>.props;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// These two props are injected by React DnD,</span></div><div class=\"line\">    <span class=\"comment\">// as defined by your `collect` function above:</span></div><div class=\"line\">    <span class=\"keyword\">const</span> &#123; isDragging, connectDragSource &#125; = <span class=\"keyword\">this</span>.props;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> connectDragSource(</div><div class=\"line\">      &lt;div&gt;</div><div class=\"line\">        I am a draggable card number &#123;id&#125;</div><div class=\"line\">        &#123;isDragging &amp;&amp; ' (and I am being dragged now)'&#125;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"마치며\"><a href=\"#마치며\" class=\"headerlink\" title=\"마치며\"></a>마치며</h2><h2 id=\"참고-링크\"><a href=\"#참고-링크\" class=\"headerlink\" title=\"참고 링크\"></a>참고 링크</h2><ul>\n<li><a href=\"http://react-dnd.github.io/react-dnd/docs-overview.html\">React-dnd</a></li>\n<li><a href=\"https://facebook.github.io/react/docs/higher-order-components.html\">Higher-Order Components</a></li>\n<li><a href=\"https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841\">ES7 decorators</a></li>\n</ul>\n"},{"title":"[Hexo로 포스팅하기 1] Hexo를 설치해 보자","date":"2016-08-19T22:48:59.000Z","_content":"\n<!--![](images/debug.gif)-->\n[Hexo](https://hexo.io/)는 Node.js 기반의 static site 생성기이다. Hexo를 설치하고 Github에 호스팅하는 방법을 알아보려고 한다. 블로그 작성을 시작해야 겠다고 마음 먹은 후로 wordpress, tistory같은 php 기반툴들과 jekyll, hexo와 같은 static site 생성들 중에 어떤 것을 사용할 지 고민을 했었다. 그러다 나의 Geek스러움이 특이한 것에 이끌리게 했고, 개발자들이 블로그에 많이 사용하는 static site를 사용하기로 했다. 그 뒤에 jekyll을 사용하려고 했었지만, 테마를 찾다보니 Hexo의 icarus라는 테마가 마음에 들어 Hexo로 블로깅을 하기로 했다.\n\n<!-- more -->\n\n## Hexo 설치\nHexo를 설치하기 위해서는 Node.js가 필요하며, github 호스팅을 위해 git을 설치해야 한다. git 설치 및 사용을 위해서는 다음 사이트들을 참고하면 된다.\n* [Git 홈페이지](https://git-scm.com/)\n* [Git 간편 안내서](https://rogerdudler.github.io/git-guide/index.ko.html)\n\n[Nodejs 공식 홈페이지](https://nodejs.org/ko/)에서 다운받을 수도 있지만, 버전 관리를 위해 [nvm](https://github.com/creationix/nvm)을 통한 설치를 추천한다.</br>\ncURL을 이용하여 nvm 및 Node.js 설치\n```bash\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n$ nvm install stable\n```\nNode.js를 설치한 뒤 다음 명령어를 통해 hexo를 설치한다. -g 옵션은 터미널에서 hexo 명령어를 사용할 수 있게 해주므로 사용하는 것을 추천한다.\n```bash\n$ npm install -g hexo-cli\n```\n참고로 맥에서는 Xcode 설치 후 Command Line Tools를 설치한 후 사용해야 한다.\n\n폴더를 생성한 후, 해당 폴더에서 다음 명령어를 입력하면 초기화 및 확인이 가능하다.\n```bash\n$ hexo init\n$ hexo server\n```\n\n브라우저를 통해 [localhost:4000](http://localhost:4000)에 들어가면 다음과 같은 화면을 볼 수 있다.</br>\n![hexo 초기 화면](http://d.pr/i/18Xgq+)\n\n\n## Github를 통해 Hexo 호스팅하기\n우선 Github에 로그인 한 뒤 새 repository를 생성한다.</br>\n![새 repository 생성 1](http://d.pr/i/1cvRa+ \"\")\n그 후 repository 이름을 입력해야 하는데 (자신의 github 아이디).github.io와 같은 형식으로 해야 한다. 예를 들어, 나의 아이디는 pocketeer이므로 pocketeer.github.io를 입력해 주면 된다. </br>\n![새 repository 생성 2](http://d.pr/i/LmsY+ \"\")\nrepository 주소를 복사한다.</br>\n![repository 주소 복사](http://d.pr/i/12qZK+ \"\")\n\n이제 _config.yml에서 deploy에 아까 복사한 repository 주소를 넣으면 된다.\n참고로 자세한 설명은 생략하겠지만 bitbucket의 repository 주소를 넣어도 가능하다.\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: [복사한 repository 주소]\n  branch: master\n```\n\n꼭 할 필요는 없지만, 플러그인 연동시 문제가 될 수 있으므로 다음처럼 url도 바꿔주는 것이 좋다.\n```yml\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://(자신의 github 아이디).github.io\n```\n\ngithub에서 자동으로 hexo 템플릿에 따라 사이트를 생성해 주지는 않기 때문에, github repository에 deploy하기 전에 다음 명령어를 입력하여 사이트를 생성해 주어야 한다. 생성된 사이트는 public 폴더에 있다.\n```bash\n$ hexo generate\n```\n\n그 후에 다음 명령어를 입력하면, _config.yml에 넣었던 repository에 public 폴더안의 파일들을 deploy해준다.\n```bash\n$ hexo deploy\n```\n\n보통 사이트를 업데이트하기 위해서는 앞의 두 명령어를 차례로 입력해야 하는데, 좀 귀찮다. 이를 위해 다음 두 명령어처럼 한번에 가능하다. 두 개다 사이트를 생성 후 deploy해준다.\n```bash\n$ hexo deploy -g    # g는 generate의 g\n$ hexo generate -d  # d는 deploy의 d \n```\n\n이제 확인을 위해 브라우저를 통해 http://(자신의 github 아이디).github.io에 들어가면 자신의 블로그를 확인할 수 있다.\n\n## 끝으로\n지금까지 Github를 통해 Hexo를 호스팅하는 방법에 대해 알아보았다. Hexo에 대해 계속해서 포스팅할 예정이지만, 정보를 더 얻고 싶으면 [Hexo의 문서](https://hexo.io/docs/)를 보는 것도 추천한다. 다음 글에서는 Hexo로 글쓰는 방법에 대해 알아본다.\n\n## 참고링크\n* [Hexo](https://hexo.io/)\n* [Hexo documentation](https://hexo.io/docs/)","source":"_posts/hexo-install.md","raw":"---\ntitle: '[Hexo로 포스팅하기 1] Hexo를 설치해 보자'\ntags:\n  - hexo\n  - blog\ncategories:\n  - hexo\n  - 설치\ndate: 2016-08-20 07:48:59\n---\n\n<!--![](images/debug.gif)-->\n[Hexo](https://hexo.io/)는 Node.js 기반의 static site 생성기이다. Hexo를 설치하고 Github에 호스팅하는 방법을 알아보려고 한다. 블로그 작성을 시작해야 겠다고 마음 먹은 후로 wordpress, tistory같은 php 기반툴들과 jekyll, hexo와 같은 static site 생성들 중에 어떤 것을 사용할 지 고민을 했었다. 그러다 나의 Geek스러움이 특이한 것에 이끌리게 했고, 개발자들이 블로그에 많이 사용하는 static site를 사용하기로 했다. 그 뒤에 jekyll을 사용하려고 했었지만, 테마를 찾다보니 Hexo의 icarus라는 테마가 마음에 들어 Hexo로 블로깅을 하기로 했다.\n\n<!-- more -->\n\n## Hexo 설치\nHexo를 설치하기 위해서는 Node.js가 필요하며, github 호스팅을 위해 git을 설치해야 한다. git 설치 및 사용을 위해서는 다음 사이트들을 참고하면 된다.\n* [Git 홈페이지](https://git-scm.com/)\n* [Git 간편 안내서](https://rogerdudler.github.io/git-guide/index.ko.html)\n\n[Nodejs 공식 홈페이지](https://nodejs.org/ko/)에서 다운받을 수도 있지만, 버전 관리를 위해 [nvm](https://github.com/creationix/nvm)을 통한 설치를 추천한다.</br>\ncURL을 이용하여 nvm 및 Node.js 설치\n```bash\n$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh\n$ nvm install stable\n```\nNode.js를 설치한 뒤 다음 명령어를 통해 hexo를 설치한다. -g 옵션은 터미널에서 hexo 명령어를 사용할 수 있게 해주므로 사용하는 것을 추천한다.\n```bash\n$ npm install -g hexo-cli\n```\n참고로 맥에서는 Xcode 설치 후 Command Line Tools를 설치한 후 사용해야 한다.\n\n폴더를 생성한 후, 해당 폴더에서 다음 명령어를 입력하면 초기화 및 확인이 가능하다.\n```bash\n$ hexo init\n$ hexo server\n```\n\n브라우저를 통해 [localhost:4000](http://localhost:4000)에 들어가면 다음과 같은 화면을 볼 수 있다.</br>\n![hexo 초기 화면](http://d.pr/i/18Xgq+)\n\n\n## Github를 통해 Hexo 호스팅하기\n우선 Github에 로그인 한 뒤 새 repository를 생성한다.</br>\n![새 repository 생성 1](http://d.pr/i/1cvRa+ \"\")\n그 후 repository 이름을 입력해야 하는데 (자신의 github 아이디).github.io와 같은 형식으로 해야 한다. 예를 들어, 나의 아이디는 pocketeer이므로 pocketeer.github.io를 입력해 주면 된다. </br>\n![새 repository 생성 2](http://d.pr/i/LmsY+ \"\")\nrepository 주소를 복사한다.</br>\n![repository 주소 복사](http://d.pr/i/12qZK+ \"\")\n\n이제 _config.yml에서 deploy에 아까 복사한 repository 주소를 넣으면 된다.\n참고로 자세한 설명은 생략하겠지만 bitbucket의 repository 주소를 넣어도 가능하다.\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: [복사한 repository 주소]\n  branch: master\n```\n\n꼭 할 필요는 없지만, 플러그인 연동시 문제가 될 수 있으므로 다음처럼 url도 바꿔주는 것이 좋다.\n```yml\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://(자신의 github 아이디).github.io\n```\n\ngithub에서 자동으로 hexo 템플릿에 따라 사이트를 생성해 주지는 않기 때문에, github repository에 deploy하기 전에 다음 명령어를 입력하여 사이트를 생성해 주어야 한다. 생성된 사이트는 public 폴더에 있다.\n```bash\n$ hexo generate\n```\n\n그 후에 다음 명령어를 입력하면, _config.yml에 넣었던 repository에 public 폴더안의 파일들을 deploy해준다.\n```bash\n$ hexo deploy\n```\n\n보통 사이트를 업데이트하기 위해서는 앞의 두 명령어를 차례로 입력해야 하는데, 좀 귀찮다. 이를 위해 다음 두 명령어처럼 한번에 가능하다. 두 개다 사이트를 생성 후 deploy해준다.\n```bash\n$ hexo deploy -g    # g는 generate의 g\n$ hexo generate -d  # d는 deploy의 d \n```\n\n이제 확인을 위해 브라우저를 통해 http://(자신의 github 아이디).github.io에 들어가면 자신의 블로그를 확인할 수 있다.\n\n## 끝으로\n지금까지 Github를 통해 Hexo를 호스팅하는 방법에 대해 알아보았다. Hexo에 대해 계속해서 포스팅할 예정이지만, 정보를 더 얻고 싶으면 [Hexo의 문서](https://hexo.io/docs/)를 보는 것도 추천한다. 다음 글에서는 Hexo로 글쓰는 방법에 대해 알아본다.\n\n## 참고링크\n* [Hexo](https://hexo.io/)\n* [Hexo documentation](https://hexo.io/docs/)","slug":"hexo-install","published":1,"updated":"2017-09-21T17:40:08.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj7usepan0006me3s2j7vug6t","content":"<!--![](images/debug.gif)-->\n<p><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>는 Node.js 기반의 static site 생성기이다. Hexo를 설치하고 Github에 호스팅하는 방법을 알아보려고 한다. 블로그 작성을 시작해야 겠다고 마음 먹은 후로 wordpress, tistory같은 php 기반툴들과 jekyll, hexo와 같은 static site 생성들 중에 어떤 것을 사용할 지 고민을 했었다. 그러다 나의 Geek스러움이 특이한 것에 이끌리게 했고, 개발자들이 블로그에 많이 사용하는 static site를 사용하기로 했다. 그 뒤에 jekyll을 사용하려고 했었지만, 테마를 찾다보니 Hexo의 icarus라는 테마가 마음에 들어 Hexo로 블로깅을 하기로 했다.</p>\n<a id=\"more\"></a>\n<h2 id=\"Hexo-설치\"><a href=\"#Hexo-설치\" class=\"headerlink\" title=\"Hexo 설치\"></a>Hexo 설치</h2><p>Hexo를 설치하기 위해서는 Node.js가 필요하며, github 호스팅을 위해 git을 설치해야 한다. git 설치 및 사용을 위해서는 다음 사이트들을 참고하면 된다.</p>\n<ul>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">Git 홈페이지</a></li>\n<li><a href=\"https://rogerdudler.github.io/git-guide/index.ko.html\" target=\"_blank\" rel=\"external\">Git 간편 안내서</a></li>\n</ul>\n<p><a href=\"https://nodejs.org/ko/\" target=\"_blank\" rel=\"external\">Nodejs 공식 홈페이지</a>에서 다운받을 수도 있지만, 버전 관리를 위해 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a>을 통한 설치를 추천한다.<br><br>cURL을 이용하여 nvm 및 Node.js 설치<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class=\"line\">$ nvm install stable</div></pre></td></tr></table></figure></p>\n<p>Node.js를 설치한 뒤 다음 명령어를 통해 hexo를 설치한다. -g 옵션은 터미널에서 hexo 명령어를 사용할 수 있게 해주므로 사용하는 것을 추천한다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p>참고로 맥에서는 Xcode 설치 후 Command Line Tools를 설치한 후 사용해야 한다.</p>\n<p>폴더를 생성한 후, 해당 폴더에서 다음 명령어를 입력하면 초기화 및 확인이 가능하다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure></p>\n<p>브라우저를 통해 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">localhost:4000</a>에 들어가면 다음과 같은 화면을 볼 수 있다.<br><br><img src=\"http://d.pr/i/18Xgq+\" alt=\"hexo 초기 화면\"></p>\n<h2 id=\"Github를-통해-Hexo-호스팅하기\"><a href=\"#Github를-통해-Hexo-호스팅하기\" class=\"headerlink\" title=\"Github를 통해 Hexo 호스팅하기\"></a>Github를 통해 Hexo 호스팅하기</h2><p>우선 Github에 로그인 한 뒤 새 repository를 생성한다.<br><br><img src=\"http://d.pr/i/1cvRa+\" alt=\"새 repository 생성 1\"><br>그 후 repository 이름을 입력해야 하는데 (자신의 github 아이디).github.io와 같은 형식으로 해야 한다. 예를 들어, 나의 아이디는 pocketeer이므로 pocketeer.github.io를 입력해 주면 된다. <br><br><img src=\"http://d.pr/i/LmsY+\" alt=\"새 repository 생성 2\"><br>repository 주소를 복사한다.<br><br><img src=\"http://d.pr/i/12qZK+\" alt=\"repository 주소 복사\"></p>\n<p>이제 _config.yml에서 deploy에 아까 복사한 repository 주소를 넣으면 된다.<br>참고로 자세한 설명은 생략하겠지만 bitbucket의 repository 주소를 넣어도 가능하다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Deployment</span></div><div class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></div><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"built_in\">type</span>: git</div><div class=\"line\">  repo: [복사한 repository 주소]</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<p>꼭 할 필요는 없지만, 플러그인 연동시 문제가 될 수 있으므로 다음처럼 url도 바꿔주는 것이 좋다.<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># URL</span></div><div class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class=\"line\"><span class=\"attr\">url:</span> <span class=\"attr\">http://(자신의</span> <span class=\"string\">github</span> <span class=\"string\">아이디).github.io</span></div></pre></td></tr></table></figure></p>\n<p>github에서 자동으로 hexo 템플릿에 따라 사이트를 생성해 주지는 않기 때문에, github repository에 deploy하기 전에 다음 명령어를 입력하여 사이트를 생성해 주어야 한다. 생성된 사이트는 public 폴더에 있다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure></p>\n<p>그 후에 다음 명령어를 입력하면, _config.yml에 넣었던 repository에 public 폴더안의 파일들을 deploy해준다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure></p>\n<p>보통 사이트를 업데이트하기 위해서는 앞의 두 명령어를 차례로 입력해야 하는데, 좀 귀찮다. 이를 위해 다음 두 명령어처럼 한번에 가능하다. 두 개다 사이트를 생성 후 deploy해준다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy -g    <span class=\"comment\"># g는 generate의 g</span></div><div class=\"line\">$ hexo generate <span class=\"_\">-d</span>  <span class=\"comment\"># d는 deploy의 d</span></div></pre></td></tr></table></figure></p>\n<p>이제 확인을 위해 브라우저를 통해 <a href=\"http://(자신의\" target=\"_blank\" rel=\"external\">http://(자신의</a> github 아이디).github.io에 들어가면 자신의 블로그를 확인할 수 있다.</p>\n<h2 id=\"끝으로\"><a href=\"#끝으로\" class=\"headerlink\" title=\"끝으로\"></a>끝으로</h2><p>지금까지 Github를 통해 Hexo를 호스팅하는 방법에 대해 알아보았다. Hexo에 대해 계속해서 포스팅할 예정이지만, 정보를 더 얻고 싶으면 <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">Hexo의 문서</a>를 보는 것도 추천한다. 다음 글에서는 Hexo로 글쓰는 방법에 대해 알아본다.</p>\n<h2 id=\"참고링크\"><a href=\"#참고링크\" class=\"headerlink\" title=\"참고링크\"></a>참고링크</h2><ul>\n<li><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a></li>\n<li><a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">Hexo documentation</a></li>\n</ul>\n","excerpt":"<!--![](images/debug.gif)-->\n<p><a href=\"https://hexo.io/\">Hexo</a>는 Node.js 기반의 static site 생성기이다. Hexo를 설치하고 Github에 호스팅하는 방법을 알아보려고 한다. 블로그 작성을 시작해야 겠다고 마음 먹은 후로 wordpress, tistory같은 php 기반툴들과 jekyll, hexo와 같은 static site 생성들 중에 어떤 것을 사용할 지 고민을 했었다. 그러다 나의 Geek스러움이 특이한 것에 이끌리게 했고, 개발자들이 블로그에 많이 사용하는 static site를 사용하기로 했다. 그 뒤에 jekyll을 사용하려고 했었지만, 테마를 찾다보니 Hexo의 icarus라는 테마가 마음에 들어 Hexo로 블로깅을 하기로 했다.</p>","more":"<h2 id=\"Hexo-설치\"><a href=\"#Hexo-설치\" class=\"headerlink\" title=\"Hexo 설치\"></a>Hexo 설치</h2><p>Hexo를 설치하기 위해서는 Node.js가 필요하며, github 호스팅을 위해 git을 설치해야 한다. git 설치 및 사용을 위해서는 다음 사이트들을 참고하면 된다.</p>\n<ul>\n<li><a href=\"https://git-scm.com/\">Git 홈페이지</a></li>\n<li><a href=\"https://rogerdudler.github.io/git-guide/index.ko.html\">Git 간편 안내서</a></li>\n</ul>\n<p><a href=\"https://nodejs.org/ko/\">Nodejs 공식 홈페이지</a>에서 다운받을 수도 있지만, 버전 관리를 위해 <a href=\"https://github.com/creationix/nvm\">nvm</a>을 통한 설치를 추천한다.</br><br>cURL을 이용하여 nvm 및 Node.js 설치<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div><div class=\"line\">$ nvm install stable</div></pre></td></tr></table></figure></p>\n<p>Node.js를 설치한 뒤 다음 명령어를 통해 hexo를 설치한다. -g 옵션은 터미널에서 hexo 명령어를 사용할 수 있게 해주므로 사용하는 것을 추천한다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>\n<p>참고로 맥에서는 Xcode 설치 후 Command Line Tools를 설치한 후 사용해야 한다.</p>\n<p>폴더를 생성한 후, 해당 폴더에서 다음 명령어를 입력하면 초기화 및 확인이 가능하다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure></p>\n<p>브라우저를 통해 <a href=\"http://localhost:4000\">localhost:4000</a>에 들어가면 다음과 같은 화면을 볼 수 있다.</br><br><img src=\"http://d.pr/i/18Xgq+\" alt=\"hexo 초기 화면\"></p>\n<h2 id=\"Github를-통해-Hexo-호스팅하기\"><a href=\"#Github를-통해-Hexo-호스팅하기\" class=\"headerlink\" title=\"Github를 통해 Hexo 호스팅하기\"></a>Github를 통해 Hexo 호스팅하기</h2><p>우선 Github에 로그인 한 뒤 새 repository를 생성한다.</br><br><img src=\"http://d.pr/i/1cvRa+\" alt=\"새 repository 생성 1\"><br>그 후 repository 이름을 입력해야 하는데 (자신의 github 아이디).github.io와 같은 형식으로 해야 한다. 예를 들어, 나의 아이디는 pocketeer이므로 pocketeer.github.io를 입력해 주면 된다. </br><br><img src=\"http://d.pr/i/LmsY+\" alt=\"새 repository 생성 2\"><br>repository 주소를 복사한다.</br><br><img src=\"http://d.pr/i/12qZK+\" alt=\"repository 주소 복사\"></p>\n<p>이제 _config.yml에서 deploy에 아까 복사한 repository 주소를 넣으면 된다.<br>참고로 자세한 설명은 생략하겠지만 bitbucket의 repository 주소를 넣어도 가능하다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Deployment</span></div><div class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></div><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"built_in\">type</span>: git</div><div class=\"line\">  repo: [복사한 repository 주소]</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure></p>\n<p>꼭 할 필요는 없지만, 플러그인 연동시 문제가 될 수 있으므로 다음처럼 url도 바꿔주는 것이 좋다.<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># URL</span></div><div class=\"line\"><span class=\"comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class=\"line\"><span class=\"attr\">url:</span> <span class=\"attr\">http://(자신의</span> <span class=\"string\">github</span> <span class=\"string\">아이디).github.io</span></div></pre></td></tr></table></figure></p>\n<p>github에서 자동으로 hexo 템플릿에 따라 사이트를 생성해 주지는 않기 때문에, github repository에 deploy하기 전에 다음 명령어를 입력하여 사이트를 생성해 주어야 한다. 생성된 사이트는 public 폴더에 있다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure></p>\n<p>그 후에 다음 명령어를 입력하면, _config.yml에 넣었던 repository에 public 폴더안의 파일들을 deploy해준다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure></p>\n<p>보통 사이트를 업데이트하기 위해서는 앞의 두 명령어를 차례로 입력해야 하는데, 좀 귀찮다. 이를 위해 다음 두 명령어처럼 한번에 가능하다. 두 개다 사이트를 생성 후 deploy해준다.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy -g    <span class=\"comment\"># g는 generate의 g</span></div><div class=\"line\">$ hexo generate <span class=\"_\">-d</span>  <span class=\"comment\"># d는 deploy의 d</span></div></pre></td></tr></table></figure></p>\n<p>이제 확인을 위해 브라우저를 통해 <a href=\"http://(자신의\">http://(자신의</a> github 아이디).github.io에 들어가면 자신의 블로그를 확인할 수 있다.</p>\n<h2 id=\"끝으로\"><a href=\"#끝으로\" class=\"headerlink\" title=\"끝으로\"></a>끝으로</h2><p>지금까지 Github를 통해 Hexo를 호스팅하는 방법에 대해 알아보았다. Hexo에 대해 계속해서 포스팅할 예정이지만, 정보를 더 얻고 싶으면 <a href=\"https://hexo.io/docs/\">Hexo의 문서</a>를 보는 것도 추천한다. 다음 글에서는 Hexo로 글쓰는 방법에 대해 알아본다.</p>\n<h2 id=\"참고링크\"><a href=\"#참고링크\" class=\"headerlink\" title=\"참고링크\"></a>참고링크</h2><ul>\n<li><a href=\"https://hexo.io/\">Hexo</a></li>\n<li><a href=\"https://hexo.io/docs/\">Hexo documentation</a></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj7usepaa0000me3sd44nuiie","category_id":"cj7usepam0004me3syxhu1hli","_id":"cj7usepav0009me3sqvf8kvhy"},{"post_id":"cj7usepah0002me3sly75tgfx","category_id":"cj7usepas0007me3s37cqudjb","_id":"cj7usepay000dme3s451zqvpy"},{"post_id":"cj7usepan0006me3s2j7vug6t","category_id":"cj7usepam0004me3syxhu1hli","_id":"cj7usepb5000lme3si72m24e2"},{"post_id":"cj7usepan0006me3s2j7vug6t","category_id":"cj7usepaz000gme3skoj619w3","_id":"cj7usepb5000mme3scb22lovf"}],"PostTag":[{"post_id":"cj7usepaa0000me3sd44nuiie","tag_id":"cj7usepan0005me3sntyx9s0r","_id":"cj7usepay000cme3s6fvuo7rp"},{"post_id":"cj7usepaa0000me3sd44nuiie","tag_id":"cj7usepas0008me3s3deft7rb","_id":"cj7usepay000eme3slz3zpngh"},{"post_id":"cj7usepah0002me3sly75tgfx","tag_id":"cj7usepaw000bme3saay3chrl","_id":"cj7usepb1000ime3s7ak58yzs"},{"post_id":"cj7usepah0002me3sly75tgfx","tag_id":"cj7usepaz000fme3s6h8tvw92","_id":"cj7usepb2000jme3sm2kuyxkh"},{"post_id":"cj7usepan0006me3s2j7vug6t","tag_id":"cj7usepan0005me3sntyx9s0r","_id":"cj7usepb6000nme3s8rli3ah4"},{"post_id":"cj7usepan0006me3s2j7vug6t","tag_id":"cj7usepas0008me3s3deft7rb","_id":"cj7usepb7000ome3skex57ks9"}],"Tag":[{"name":"hexo","_id":"cj7usepan0005me3sntyx9s0r"},{"name":"blog","_id":"cj7usepas0008me3s3deft7rb"},{"name":"react-dnd","_id":"cj7usepaw000bme3saay3chrl"},{"name":"react","_id":"cj7usepaz000fme3s6h8tvw92"}]}}